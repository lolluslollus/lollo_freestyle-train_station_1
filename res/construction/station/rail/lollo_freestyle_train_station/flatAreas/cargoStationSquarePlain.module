local _constants = require('lollo_freestyle_train_station.constants')
-- local constructionutil = require "constructionutil"
local logger = require('lollo_freestyle_train_station.logger')
local moduleHelpers = require('lollo_freestyle_train_station.moduleHelpers')
local modulesutil = require "modulesutil"
local transfUtils = require('lollo_freestyle_train_station.transfUtils')
local transfUtilsUG = require "transf"


function data()
	return {
		availability = {
			yearFrom = 0,
			yearTo = 0
		},
		category = {
			categories = { "cargo-road-access", "cargo-road-access-axial", },
		},
		cost = {
			price = 0,
		},
		description = {
			name = _("CargoStationSquarePlainName"),
			description = _("CargoStationSquarePlainDesc"),
			icon = "ui/lollo_freestyle_train_station/cargoStationSquarePlain.tga"
		},
		metadata = { },
		order = {
			value = 2, -- LOLLO NOTE put this first to speed up station configuration, since it has very few slots
		},
		type = _constants.cargoStationSquareModuleType,
		updateFn = function(result, slotTransf, tag, slotId, addModelFn, params, updateScriptParams)
			local nTerminal, nTrackEdge, baseId = result.demangleId(slotId)
			if not nTerminal or not nTrackEdge or not baseId then return end

			local _eraPrefix = moduleHelpers.getEraPrefix(params, nTerminal, nTrackEdge)
			local groundFacesFillKey = moduleHelpers.getGroundFacesFillKey_cargo(result, nTerminal, _eraPrefix)
			local groundFacesStrokeOuterKey = groundFacesFillKey
			local modelId = nil
			if _eraPrefix == moduleHelpers.eras.era_a.prefix then
				modelId = 'lollo_freestyle_train_station/railroad/flatSides/cargo/era_a_station_square_plain.mdl'
			elseif _eraPrefix == moduleHelpers.eras.era_b.prefix then
				modelId = 'lollo_freestyle_train_station/railroad/flatSides/cargo/era_b_station_square_plain.mdl'
			else
				modelId = 'lollo_freestyle_train_station/railroad/flatSides/cargo/era_c_station_square_plain.mdl'
			end
			result.models[#result.models + 1] = {
				id = modelId,
				slotId = slotId,
				transf = slotTransf,
				tag = tag
			}
			-- result.models[#result.models + 1] = {
			-- 	id = 'lollo_freestyle_train_station/icon/red_huge.mdl',
			-- 	slotId = slotId,
			-- 	transf = slotTransf,
			-- 	tag = tag
			-- }
			moduleHelpers.flatAreas.doTerrain4StationSquare(0, slotTransf, result, groundFacesFillKey, groundFacesStrokeOuterKey)
		end,

		getModelsFn = function(params)
			return {
				{
					id = 'lollo_freestyle_train_station/railroad/flatSides/cargo/era_c_station_square_plain.mdl',
					transf = _constants.idTransf,
				},
			}
		end
	}
end
